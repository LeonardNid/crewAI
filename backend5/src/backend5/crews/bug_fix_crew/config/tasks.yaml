# bug_fixer

analyze_startup_failure_task:
  description: >
    The backend could not start. Error was:
    {test_result}

    Here is the models.py file: 
    """{models_py}"""

    Here is the app.py file: 
    """{app_py}"""

    Your job:
    - Identify the code sections that make the app not executable
    - Write a fix plan

  expected_output: >
    Markdown file with problems and how to fix each
  agent: bug_analyzer


analyze_failed_requests_task:
  description: >
    Here is the test result from the TestCrew:
    {test_result}

    Here is the models.py file: 
    """{models_py}"""

    Here is the app.py file: 
    """{app_py}"""

    For each failed request:
      - Match it to the code sections in models.py or app.py.
      - Determine if the issue is due to missing fields, wrong data types, missing routes, or logic bugs.
      - Propose how to fix it.
    You are not fixing the bug yet. Your job is only to isolate the issue and create a plan.

  expected_output: >
    Your final output must be a Markdown file titled "Bug Fix Plan",
    listing each ❌ failed request, the likely root cause, and what changes are needed
    (which file and what code section to fix).

    Format example:
    ---
    ❌ PUT /teams/1
    Cause: Missing field "city" not handled in PUT route
    Fix: Add support for 'city' in PUT handler in app.py

    ❌ POST /players
    Cause: Model 'Player' missing 'position' field
    Fix: Add 'position = db.String' to Player class in models.py
    ---

  agent: bug_analyzer

fix_code_task:
  description: >
    Use the bug fix plan from your context to modify *and rewrite* the files
    'Output/models.py' and/or 'Output/app.py'.

    Here is the Output/models.py file: 
    """{models_py}"""

    Here is the Output/app.py file: 
    """{app_py}"""

    You must:
      - You have to use the "file_writer" tool to change the app.py and models.py files.
      - **When calling FileWriterTool, you MUST pass the ENTIRE updated file
        content - never a partial snippet.**
      - Apply only the fixes that are clearly defined in the fix plan
      - **Do NOT delete or omit any existing code that is unrelated to the fix.**
      - Validate that the written file can still be executed/imported.

  expected_output: >
    Your final answer must confirm:
    - What file(s) were changed
    - What sections were modified
    - The final confirmation of write success (e.g. "models.py updated successfully.")
    - **An explicit statement that the full file content was written (not a diff)**

  agent: code_modifier
  output_file: Output/bug_Fix_crew/fix_summary.md

